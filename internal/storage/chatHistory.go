package storage

import (
	"encoding/json"
	"io/ioutil"
	"log"
	"os"
)

// üî• –§–∞–π–ª, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö—Ä–∞–Ω–∏—Ç—Å—è –∏—Å—Ç–æ—Ä–∏—è
const historyFile = "chat_history.json" // –ú–∞–∫—Å–∏–º—É–º 10 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π

var ChatHistory []map[string]string // –•—Ä–∞–Ω–∏—Ç –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π
const MaxHistory = 100              // –ú–∞–∫—Å–∏–º—É–º 100 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π

// üìú –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
func LoadChatHistory() {
	if _, err := os.Stat(historyFile); os.IsNotExist(err) {
		log.Println("üìÇ –§–∞–π–ª –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π...")
		return
	}

	data, err := ioutil.ReadFile(historyFile)
	if err != nil {
		log.Println("‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏:", err)
		return
	}

	err = json.Unmarshal(data, &ChatHistory)
	if err != nil {
		log.Println("‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON:", err)
		ChatHistory = []map[string]string{} // –ï—Å–ª–∏ —Ñ–∞–π–ª —Å–ª–æ–º–∞–Ω, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
	}
	log.Println("‚úÖ –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞–≥—Ä—É–∂–µ–Ω–∞! –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π:", len(ChatHistory))
}

// üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ñ–∞–π–ª
func SaveChatHistory() {
	data, err := json.MarshalIndent(ChatHistory, "", "  ")
	if err != nil {
		log.Println("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏:", err)
		return
	}

	err = ioutil.WriteFile(historyFile, data, 0644)
	if err != nil {
		log.Println("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª:", err)
	}
}
