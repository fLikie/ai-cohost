package config

import (
	"encoding/json"
	"log"
	"os"
)

type Config struct {
	TwitchChannel   string  `json:"twitch_channel"`
	SelectedVoice   string  `json:"selected_voice"`
	VolumeLevel     float64 `json:"volume_level"`
	SelectedAiModel string  `json:"selected_ai_model"`
	SelectedTTS     string  `json:"selected_tts"`
}

var Settings Config

const settingsFile = "settings.json"

// üìÇ –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
func LoadSettings() {
	file, err := os.ReadFile(settingsFile)
	if err != nil {
		log.Println("‚ö†Ô∏è –§–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π...")
		SaveSettings() // –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç, —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π
		return
	}

	if err := json.Unmarshal(file, &Settings); err != nil {
		log.Println("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫:", err)
		return
	}
}

// üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ —Ñ–∞–π–ª
func SaveSettings() {
	data, err := json.MarshalIndent(Settings, "", "  ")
	if err != nil {
		log.Println("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫:", err)
		return
	}
	err = os.WriteFile(settingsFile, data, 0644)
	if err != nil {
		log.Println("–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫:", err)
		return
	}
}
