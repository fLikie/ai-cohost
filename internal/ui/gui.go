package ui

import (
	"cohost/internal/audio"
	"cohost/internal/config"
	"fmt"
	"fyne.io/fyne/v2"
	"fyne.io/fyne/v2/app"
	"fyne.io/fyne/v2/container"
	"fyne.io/fyne/v2/widget"
	"log"
	"os"
	"strings"
)

var (
	chatBox         *widget.Label
	aiResponseBox   *widget.Label
	gameEntry       *widget.Entry
	SelectedGame    string
	aiModelSelector *widget.Select
	voiceSelector   *widget.Select
	volumeSlider    *widget.Slider
	volumeLabel     *widget.Label // –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ç–µ–∫—É—â—É—é –≥—Ä–æ–º–∫–æ—Å—Ç—å
	botRunning      = false
	aiModels        = []string{"OpenAI", "DeepSeek"} // –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏
)

func CreateGUI(twichBot func(), audioPlayer func()) {
	log.Println("–°–æ–∑–¥–∞–Ω–∏–µ GUI...")
	myApp := app.New()
	myWindow := myApp.NewWindow("AI –°–æ–≤–µ–¥—É—â–∏–π")

	log.Println("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤...")
	log.Println("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!")

	keys := make([]string, 0, len(audio.Voices))
	for k := range audio.Voices {
		keys = append(keys, k)
	}

	voiceSelector = widget.NewSelect(keys, func(value string) {
		config.Settings.SelectedVoice = value
		log.Println("üéô –í—ã–±—Ä–∞–Ω –≥–æ–ª–æ—Å:", config.Settings.SelectedVoice)
		config.SaveSettings() // üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
	})
	voiceSelector.SetSelected(config.Settings.SelectedVoice) // üéØ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π –≥–æ–ª–æ—Å

	// üîä –ü–æ–ª–∑—É–Ω–æ–∫ –≥—Ä–æ–º–∫–æ—Å—Ç–∏
	volumeSlider = widget.NewSlider(0.0, 1.0)          // –î–∏–∞–ø–∞–∑–æ–Ω –æ—Ç 0% –¥–æ 100%
	volumeSlider.Step = 0.05                           // üî• –ë–æ–ª–µ–µ —Ç–æ—á–Ω—ã–µ —à–∞–≥–∏
	volumeSlider.SetValue(config.Settings.VolumeLevel) // 50% –≥—Ä–æ–º–∫–æ—Å—Ç–∏ = —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ

	// üì¢ Label –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π –≥—Ä–æ–º–∫–æ—Å—Ç–∏
	volumeLabel = widget.NewLabel("üîä –ì—Ä–æ–º–∫–æ—Å—Ç—å: 50%")

	volumeSlider.OnChanged = func(value float64) {
		config.Settings.VolumeLevel = value
		volumeLabel.SetText(fmt.Sprintf("üîä –ì—Ä–æ–º–∫–æ—Å—Ç—å: %d%%", int(config.Settings.VolumeLevel*100)))
		log.Println("üîä –ì—Ä–æ–º–∫–æ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∞:", config.Settings.VolumeLevel)
		audio.UpdateVolume(value)
		config.SaveSettings() // üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
	}

	volumeSlider.SetValue(config.Settings.VolumeLevel) // üéØ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—É—é –≥—Ä–æ–º–∫–æ—Å—Ç—å
	chatBox = widget.NewLabel("–ß–∞—Ç –ø–æ–¥–∫–ª—é—á—ë–Ω...")
	chatBox.Wrapping = fyne.TextWrapWord // üî• –ü–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫

	aiResponseBox = widget.NewLabel("ü§ñ AI –∑–¥–µ—Å—å!")
	aiResponseBox.Wrapping = fyne.TextWrapWord // üî• –ü–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫

	gameEntry = widget.NewEntry()
	gameEntry.SetPlaceHolder("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã...")

	startButton := widget.NewButton("–ó–∞–ø—É—Å—Ç–∏—Ç—å AI-–°–æ–≤–µ–¥—É—â–µ–≥–æ", func() {
		if botRunning {
			log.Println("‚ö†Ô∏è AI-—Å–æ–≤–µ–¥—É—â–∏–π —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
			return
		}
		botRunning = true

		SelectedGame = gameEntry.Text // –ü–æ–ª—É—á–∞–µ–º –≤–≤–µ–¥—ë–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã
		if SelectedGame == "" {
			SelectedGame = "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∏–≥—Ä–∞" // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –∏–≥—Ä–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞
		}
		log.Println("üéÆ –í—ã–±—Ä–∞–Ω–∞ –∏–≥—Ä–∞:", SelectedGame)
		log.Println("üöÄ AI –°–æ–≤–µ–¥—É—â–∏–π –∑–∞–ø—É—â–µ–Ω —Å –≥–æ–ª–æ—Å–æ–º:", config.Settings.SelectedVoice)
		go twichBot()
		audioPlayer()
		SetChatText(fmt.Sprintf("ü§ñ –°–æ–≤–µ–¥—É—â–∏–π –∞–∫—Ç–∏–≤–µ–Ω! –ò–≥—Ä–∞–µ–º –≤: %s", SelectedGame))
	})

	stopButton := widget.NewButton("üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞", func() {
		if botRunning {
			log.Println("üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º AI-—Å–æ–≤–µ–¥—É—â–µ–≥–æ...")
			botRunning = false // –í—ã–∫–ª—é—á–∞–µ–º —Ñ–ª–∞–≥ —Ä–∞–±–æ—Ç—ã
		} else {
			log.Println("‚ö†Ô∏è –ë–æ—Ç —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
		}
	})

	chatContainer := container.NewVScroll(chatBox)
	chatContainer.SetMinSize(fyne.NewSize(0, 150)) // 150 –ø–∏–∫—Å–µ–ª–µ–π –ø–æ –≤—ã—Å–æ—Ç–µ

	aiResponseContainer := container.NewVScroll(aiResponseBox)
	aiResponseContainer.SetMinSize(fyne.NewSize(0, 150)) // 150 –ø–∏–∫—Å–µ–ª–µ–π –ø–æ –≤—ã—Å–æ—Ç–µ

	settingsButton := widget.NewButton("‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏", func() {
		openSettingsWindow(myApp)
	})

	exitButton := widget.NewButton("‚ùå –í—ã–π—Ç–∏", func() {
		log.Println("üö™ –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã...")
		os.Exit(0)
	})

	aiModelSelector = widget.NewSelect(aiModels, func(value string) {
		config.Settings.SelectedAiModel = value
		log.Println("ü§ñ –í—ã–±—Ä–∞–Ω–∞ –º–æ–¥–µ–ª—å AI:", config.Settings.SelectedAiModel)
		config.SaveSettings() // üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
	})
	aiModelSelector.SetSelected(config.Settings.SelectedAiModel) // üéØ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—É—é –º–æ–¥–µ–ª—å

	myWindow.SetContent(container.NewVBox(
		widget.NewLabelWithStyle("üî¥ AI –°–æ–≤–µ–¥—É—â–∏–π –¥–ª—è —Å—Ç—Ä–∏–º–æ–≤", fyne.TextAlignCenter, fyne.TextStyle{Bold: true}),
		widget.NewLabel("–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ–ª–æ—Å:"),
		voiceSelector,
		widget.NewLabel("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥—Ä–æ–º–∫–æ—Å—Ç–∏:"),
		volumeSlider, // üîä –ü–æ–ª–∑—É–Ω–æ–∫ –≥—Ä–æ–º–∫–æ—Å—Ç–∏
		volumeLabel,
		gameEntry,
		settingsButton,
		startButton,
		chatContainer,
		aiResponseContainer,

		stopButton,
		exitButton,
	))

	myWindow.Resize(fyne.NewSize(500, 400))
	log.Println("–ó–∞–ø—É—Å–∫ GUI...")
	myWindow.ShowAndRun()
}

func openSettingsWindow(app fyne.App) {
	settingsWindow := app.NewWindow("‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏")

	// –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ Twitch-–∫–∞–Ω–∞–ª–∞
	twitchChannelEntry := widget.NewEntry()
	twitchChannelEntry.SetPlaceHolder("–í–≤–µ–¥–∏—Ç–µ Twitch-–∫–∞–Ω–∞–ª")
	twitchChannelEntry.SetText(config.Settings.TwitchChannel)

	aiModelSelector = widget.NewSelect(aiModels, func(value string) {
		config.Settings.SelectedAiModel = value
		log.Println("ü§ñ –í—ã–±—Ä–∞–Ω–∞ –º–æ–¥–µ–ª—å AI:", config.Settings.SelectedAiModel)
		config.SaveSettings() // üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
	})
	aiModelSelector.SetSelected(config.Settings.SelectedAiModel) // üéØ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—É—é –º–æ–¥–µ–ª—å

	// –í—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ TTS-—Å–µ—Ä–≤–∏—Å–æ–≤
	ttsSelector := widget.NewSelect([]string{"ElevenLabs", "Yandex SpeechKit"}, func(value string) {
		config.Settings.SelectedTTS = value
		config.SaveSettings() // üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
		log.Println("üéô –í—ã–±—Ä–∞–Ω —Å–µ—Ä–≤–∏—Å TTS:", config.Settings.SelectedTTS)
	})
	ttsSelector.SetSelected(config.Settings.SelectedTTS) // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ

	// –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
	saveButton := widget.NewButton("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", func() {
		config.Settings.TwitchChannel = twitchChannelEntry.Text
		config.SaveSettings() // üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
		settingsWindow.Close()
		log.Println("‚úÖ Twitch-–∫–∞–Ω–∞–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω:", config.Settings.TwitchChannel)
	})

	settingsWindow.SetContent(container.NewVBox(
		widget.NewLabel("üîß Twitch-–Ω–∞—Å—Ç—Ä–æ–π–∫–∏"),
		widget.NewLabel("–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞:"),
		twitchChannelEntry,
		widget.NewLabel("–í—ã–±–æ—Ä AI –º–æ–¥–µ–ª–∏:"),
		aiModelSelector,
		widget.NewLabel("–í—ã–±–æ—Ä –°–∏–Ω—Ç–µ–∑–∞—Ç–æ—Ä–∞ –≥–æ–ª–æ—Å–∞:"),
		ttsSelector,
		saveButton,
	))

	settingsWindow.Resize(fyne.NewSize(400, 150))
	settingsWindow.Show()
}

func SetChatText(text string) {
	formattedText := strings.ReplaceAll(text, "\n", " ") // –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø–µ—Ä–µ–Ω–æ—Å—ã
	aiResponseBox.SetText(formattedText)                 // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Fyne
}
